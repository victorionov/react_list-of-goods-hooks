{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","isReset","reorderedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","Error","reverse","className","type","classNames","onClick","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAUJ,IAAaL,EAASI,MAAQG,EAExCG,EAAiB,UAAIT,GAAiBU,MAAK,SAACC,EAAOC,GACvD,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,KAAKjB,EAASI,KACZ,OAAO,EAET,QACE,MAAM,IAAIc,MAAM,yBAQtB,OAJIX,GACFG,EAAeS,UAIf,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,EAASc,WAAaT,IAEtCkB,QAAS,kBAAMjB,EAAYN,EAASc,WANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,EAASgB,SAAWX,IAEpCkB,QAAS,kBAAMjB,EAAYN,EAASgB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAc,SAAAgB,GAAS,OAAKA,MAN7C,qBAWCf,GACC,wBACEY,KAAK,SACLD,UAAU,6BACVG,QAAS,WACPjB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAaJ,6BACGE,EAAee,KAAI,SAAAC,GAClB,OACE,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCpGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5166cda.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isReset = sortType !== SortType.NONE || isReversed;\n\n  const reorderedGoods = [...goodsFromServer].sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      case SortType.NONE:\n        return 0;\n\n      default:\n        throw new Error('Invalid sort type');\n    }\n  });\n\n  if (isReversed) {\n    reorderedGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': SortType.ALPHABET !== sortType },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': SortType.LENGTH !== sortType },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(prevState => !prevState)}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger 'is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {reorderedGoods.map(good => {\n          return (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}